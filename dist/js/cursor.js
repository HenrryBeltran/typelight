function L(n){n.charIndex++,n.totalIndex++}function p(n,e){if(n.wordIndex===0&&n.charIndex===0)return;if(n.charIndex===0){n.wordIndex--,n.totalIndex--,n.charIndex=e.children[n.wordIndex].children.length;return}n.totalIndex--,n.charIndex--}function s(n,e){if(n.charIndex===0)return;if(e.children[n.wordIndex].children[n.charIndex]!==void 0)n.incorrectCharacters++;n.wordIndex++,n.totalIndex++,n.charIndex=0}function u(n,e){if(n.wordIndex===0&&n.charIndex===0)return;if(n.charIndex!==0){n.totalIndex-=e.children[n.wordIndex].children.length,n.charIndex=0;return}n.wordIndex--,n.charIndex=0}function C(n,e){if(e.children[n.wordIndex].children[n.charIndex-1].classList.contains("wrong"))n.incorrectCharacters++}function g(n,e,d=!1,x=!1){let i=e[n.wordIndex].lineIndex;if(n.lineIndex=i,d&&x){n.lastLineIndex=i;return}if(d&&i>n.lastLineIndex)n.lastLineIndex=i}function a(n,e,d){let x=d.children[n.wordIndex],i=n.lastLineIndex-n.lineIndex,l=n.lastLineIndex-1,o=e.find((r)=>r.lineIndex===n.lineIndex)?.word||null,I=e.find((r)=>r.lineIndex===l)?.word||null;if(o===null||I===null)return!0;if(i<2&&n.charIndex===0&&x===I)return!1;return!0}var t=0;function m(n,e,d,x=!1){let i=d.parentElement.getBoundingClientRect().width,l=d.children,o=l.length,I=x?0:e.length;if(x)e.length=0,n.numberOfLines=0,t=0;let r=n.numberOfLines;for(let h=I;h<o;h++){let f=l[h],c=f.getBoundingClientRect();if(t+c.width<i)t+=c.width;else r++,t=c.width;e.push({lineIndex:r,word:f})}n.numberOfLines=r}export{m as simulateWordsFromSpace,g as setCurrentLineIndex,p as moveCursorPreviousCharacter,L as moveCursorNextCharacter,s as jumpCursorToNextWord,u as jumpCursorAtWordStart,a as isCursorInsideBoundary,C as increaseIncorrectCharacters};
